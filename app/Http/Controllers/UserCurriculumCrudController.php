<?php

namespace App\Http\Controllers;

use Backpack\CRUD\app\Http\Controllers\CrudController;
use Illuminate\Http\Request;
use App\Http\Requests\Curriculum\CreateCurriculumRequest;
use Illuminate\Support\Facades\Auth;
use App\Models\Curriculum;
use Barryvdh\DomPDF\Facade as PDF;


class UserCurriculumCrudController extends CurriculumCrudController
{


    public function setup()
    {

        parent::setup();
        $this->crud->setModel('App\Models\Curriculum');
        $this->crud->setRoute('curriculum');
        $this->crud->denyAccess(['update','delete','create','list','show']);
        $user=Auth::user();
        if($user->isAdmin()){
            return redirect('/');
        }
        if ($user->curriculum){
            $this->crud->allowAccess(['update','show']);
        }else{
            $this->crud->allowAccess(['create']);
            $this->crud->addField(
                ['name'=>'user_id',
                    'type'=>'hidden',
                    'value'=> $user->id,
                    'box'=>'personal'
                ]);
        }

        $this->crud->addField([
            'label'=>'Evidencias',
            'name'=>'attachments',
            'box'=>'attachments',
            'upload' => true,
            'type' => 'dropzone', // voodoo magic
            'prefix' => '/uploads/', // upload folder (should match the driver specified in the upload handler defined below)
            'upload-url' => url('/curriculum/media-dropzone'), // POST route to handle the individual file uploads
        ]);


    }

    public function store(CreateCurriculumRequest $request){

        if($request->user()->curriculum){
            return redirect('/');
        }
        return $this->storeCrud($request);

    }

    public function update(CreateCurriculumRequest $request)
    {

        if ($request->input('user_id')!=Auth::user()->id && !Auth::user()->isAdmin()){
            return redirect('/');
        }


        if (empty ($request->get('attachments'))) {
            $request->merge( ['attachments' => '[]']);
        }

        return $this->updateCrud($request); // TODO: Change the autogenerated stub

    }

    public function index()
    {
        $user = Auth::user();
        if($user->curriculum){
            return redirect($this->crud->route.'/'.$user->curriculum->id);
        }else {
            return redirect('/');
        }
    }

    public function show($id)
    {
        $user = Auth::user();
        if($user->curriculum && $user->curriculum->id==$id) {
            $curriculum = Curriculum::findOrFail($id);
            return view('curriculum.show', ['curriculum' => $curriculum,'crud'=>$this->crud]);
        }
        return redirect('/');
    }

    public function export($id)
    {
        try {
            $curriculum = Curriculum::findOrFail($id);
            $pdf = PDF::loadView('curriculum.pdf', ['curriculum' => $curriculum,'show'=>true]);
            return $pdf->stream('curriculum_'.$id.'.pdf');
            //   return view('curriculum.pdf', ['curriculum' => $curriculum,'show'=>true]);
        } catch (ModelNotFoundException $mnfe) {
            return parent::show($id);
        }
    }

}
